!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=13)}([function(e,t,r){"use strict";var n,o=function(){return void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n},a=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),i=[];function s(e){for(var t=-1,r=0;r<i.length;r++)if(i[r].identifier===e){t=r;break}return t}function d(e,t){for(var r={},n=[],o=0;o<e.length;o++){var a=e[o],d=t.base?a[0]+t.base:a[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var p=s(l),u={css:a[1],media:a[2],sourceMap:a[3]};-1!==p?(i[p].references++,i[p].updater(u)):i.push({identifier:l,updater:m(u,t),references:1}),n.push(l)}return n}function c(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=r.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var l,p=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function u(e,t,r,n){var o=r?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=p(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function h(e,t,r){var n=r.css,o=r.media,a=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var f=null,v=0;function m(e,t){var r,n,o;if(t.singleton){var a=v++;r=f||(f=c(t)),n=u.bind(null,r,a,!1),o=u.bind(null,r,a,!0)}else r=c(t),n=h.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=d(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<r.length;n++){var o=s(r[n]);i[o].references--}for(var a=d(e,t),c=0;c<r.length;c++){var l=s(r[c]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}r=a}}}},function(e,t,r){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=function(e,t){var r=e[1]||"",n=e[3];if(!n)return r;if(t&&"function"==typeof btoa){var o=(i=n,s=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(d," */")),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(a).concat([o]).join("\n")}var i,s,d;return[r].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r,n){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(n)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);n&&o[d[0]]||(r&&(d[2]?d[2]="".concat(r," and ").concat(d[2]):d[2]=r),t.push(d))}},t}},function(e,t,r){"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,t,r){var n=r(0),o=r(4);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};n(o,a);e.exports=o.locals||{}},function(e,t,r){var n=r(1),o=r(2),a=r(5);t=n(!1);var i=o(a);t.push([e.i,"*{ \r\n  font-family: Impact,  Helvetica, sans-serif;\r\n  letter-spacing: 1px;\r\n  color: white; \r\n}\r\n\r\nbody{ \r\n  background: url("+i+') no-repeat left bottom fixed; \r\n}\r\n  \r\n.button{\r\n    position: absolute;\r\n    top: 45%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n    display:inline-block;\r\n    margin:20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .button a{\r\n    color:white;\r\n    font-family:Helvetica, sans-serif;\r\n    font-weight:bold;\r\n    font-size:36px;\r\n    text-align: center;\r\n    text-decoration:none;\r\n    background-color:rgb(255, 0, 0);\r\n    display:block;\r\n    position:relative;\r\n    padding:20px 40px;\r\n    \r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    text-shadow: 0px 1px 0px #000;\r\n    filter: dropshadow(color=#000, offx=0px, offy=1px);\r\n    \r\n    -webkit-box-shadow:inset 0 1px 0 #FFE5C4, 0 10px 0 #b90000;\r\n    -moz-box-shadow:inset 0 1px 0 #FFE5C4, 0 10px 0 #b90000;\r\n    box-shadow:inset 0 1px 0 #FFE5C4, 0 10px 0 #b90000;\r\n    \r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .button a:active{\r\n    top:10px;\r\n    \r\n    -webkit-box-shadow:inset 0 1px 0 #FFE5C4, inset 0 -3px 0 #b90000;\r\n    -moz-box-shadow:inset 0 1px 0 #FFE5C4, inset 0 -3px 0 #b90000;\r\n    box-shadow:inset 0 1px 0 #FFE5C4, inset 0 -3px 0 #b90000;\r\n  }\r\n  \r\n  .button:after{\r\n    content:"";\r\n    height:100%;\r\n    width:100%;\r\n    padding:4px;\r\n    position: absolute;\r\n    bottom:-15px;\r\n    left:-4px;\r\n    z-index:-1;\r\n    background-color:rgb(90, 0, 0);\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  #foguete{\r\n      position: absolute;\r\n      top: 180px;\r\n      left: 550px;\r\n  }',""]),e.exports=t},function(e,t,r){"use strict";r.r(t),t.default=r.p+"terra.png"},function(e,t,r){var n=r(0),o=r(7);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};n(o,a);e.exports=o.locals||{}},function(e,t,r){var n=r(1),o=r(2),a=r(8);t=n(!1);var i=o(a);t.push([e.i,"#naveJogador{\r\n    position: absolute;\r\n    width: 120px;\r\n    height: 120px;\r\n    background-repeat: no-repeat;\r\n    background-size: 120px;\r\n}\r\n\r\n#vilao{\r\n    position: absolute;\r\n    width: 140px;\r\n    height: 140px;\r\n    background-repeat: no-repeat;\r\n    background-size: 130px;\r\n    z-index: 5;\r\n    display: none;\r\n}\r\n\r\n.tiroJogador{\r\n    position: absolute;\r\n    width: 6px;\r\n    height: 6px;\r\n    background-color: red;\r\n    border-radius: 6px;\r\n}\r\n\r\n.tiroVilao{\r\n    position: absolute;\r\n    width: 6px;\r\n    height: 15px;\r\n    background-color: green;\r\n    border-radius: 6px;\r\n}\r\n\r\n.bomba{\r\n    position: absolute;\r\n    width: 38px;\r\n    height: 60px;\r\n    background-image: url("+i+");\r\n    background-repeat: no-repeat;\r\n    background-size: 38px 60px;\r\n}\r\n\r\n.explosao{\r\n    position: absolute;\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n",""]),e.exports=t},function(e,t,r){"use strict";r.r(t),t.default=r.p+"bomba.gif"},function(e,t,r){var n=r(0),o=r(10);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};n(o,a);e.exports=o.locals||{}},function(e,t,r){(t=r(1)(!1)).push([e.i,"#popup {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: rgb(27, 67, 212);\r\n    width: 50%;\r\n    min-width: 630px;\r\n    height: 80%;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 100;\r\n    box-shadow: 10px 0 0 0 rgb(13, 40, 139), \r\n                -10px 0 0 0 rgb(13, 40, 139),\r\n                0 10px 0 0 rgb(13, 40, 139), \r\n                0 -10px 0 0 rgb(13, 40, 139);\r\n}\r\n\r\n#popup h1 { margin-left: 30px; text-decoration: underline; }\r\n\r\n#popup-btn {\r\n    position: absolute;\r\n    right: 20px;\r\n    bottom: 20px;\r\n    border: 2px solid rgb(80, 80, 80);\r\n    color: rgb(80, 80, 80);\r\n    font-size: 18px;\r\n    background-color: transparent;\r\n    border-radius: 8px;\r\n    padding: 10px 25px;\r\n}   #popup-btn.enable {\r\n    cursor: pointer;\r\n    border: 2px solid rgb(17, 165, 17);\r\n    color: rgb(17, 165, 17);\r\n}   #popup-btn.enable:hover {\r\n    background-color: rgb(17, 165, 17);\r\n    color: white;\r\n    transition: 0.6s;\r\n    \r\n}\r\n\r\n#pontuacaoMaxima {\r\n    text-align: center;\r\n    position: relative;\r\n    float: right;\r\n}\r\n\r\n#pontuacaoMaxima img {\r\n    position: relative;\r\n    top: 30px;\r\n    right: 10px;\r\n}\r\n\r\n#nave-container {\r\n    /* border: 1px solid red; */\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    clear: both;\r\n}\r\n\r\n#nave-container i {\r\n    cursor: pointer;\r\n    padding: 10px;\r\n    border: 1px solid white;\r\n    border-radius: 50%;\r\n}\r\n\r\n#nave-container i:hover {\r\n    color: black;\r\n    background-color: white;\r\n    transition: 0.5s;\r\n}\r\n\r\n.nave-item {\r\n    width: 100px;\r\n    height: 220px;\r\n    border: 1px solid white;\r\n    border-radius: 10px;\r\n    float: left;\r\n    margin: 40px;\r\n    cursor: pointer;\r\n    position: relative;\r\n}   .nave-item:hover {\r\n    border: 2px solid rgb(17, 165, 17);\r\n    bottom: 15px;\r\n    transition: 0s;\r\n}   .nave-item:hover hr { border-color:  rgb(17, 165, 17) }\r\n    .nave-item div {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n    letter-spacing: 0.8px;\r\n    width: 90%;\r\n    margin: 3px 2px;\r\n    padding: 1px;\r\n    height: 45%;\r\n    display: flex;\r\n    flex-direction: column;\r\n}   .nave-item div img { width: 100%; height: 100%; }\r\n    .nave-item.disable {\r\n    display: none;\r\n}   .nave-item.active {\r\n    border: 3px solid rgb(17, 165, 17)\r\n}   .nave-item.active hr {\r\n    border-color: rgb(17, 165, 17);\r\n}\r\n\r\n.atributosNave {\r\n    position: relative;\r\n    bottom: 5px;\r\n}",""]),e.exports=t},function(e,t,r){var n=r(0),o=r(12);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};n(o,a);e.exports=o.locals||{}},function(e,t,r){(t=r(1)(!1)).push([e.i,"#vidaPlaneta{ display: none; }\r\n\r\n#vidaJogador{ \r\n    display: none;\r\n    position: absolute;\r\n    bottom: 20px; \r\n}\r\n\r\n#vidaVilao{ \r\n    display: none;\r\n    position: absolute;\r\n    top: 10px; \r\n    right: 20px;\r\n}\r\n\r\n.medidor{\r\n    border: 1px solid black;\r\n    width: 15%;\r\n    min-width: 200px;\r\n    height: 20px;\r\n    background-color: white;\r\n}\r\n\r\n.barra{\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: red;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: clip;\r\n}",""]),e.exports=t},function(e,t,r){"use strict";r.r(t);r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r.p,r(3),r(6),r(9),r(11);var n=window.innerHeight,o=window.innerWidth,a=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:200,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:5,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:100,d={velocidade:t,velocidadeDisparo:r,delayDisparo:a,danoDisparo:i,vida:s,vidaMaxima:s,imagem:e,naveElement:document.getElementById("naveJogador"),vidaJogadorElement:document.getElementById("vidaJogador"),posicaoX:o/2-document.getElementById("naveJogador").offsetWidth/2,posicaoY:n-200,disparoLiberado:!0,direcaoX:0,direcaoY:0,pontuacao:0,atualizarPosicaoNave:function(){this.naveElement.style.top=this.posicaoY+"px",this.naveElement.style.left=this.posicaoX+"px"},incrementarPontuacao:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;this.pontuacao+=e,document.getElementById("pontuacao").innerHTML=this.pontuacao},criarBarraVida:function(){this.barraJogador=vidaJogador.children[0].children[0],this.vidaJogadorElement.style.display="block",this.atualizarBarra()},perderVida:function(e){this.vida-=e,this.atualizarBarra(),this.vida<=0&&l.gameOver()},atualizarBarra:function(){this.barraJogador.style.width=this.vida/this.vidaMaxima*100+"%"},disparar:function(){var e=this;if(this.disparoLiberado){var t=document.createElement("div");t.setAttribute("class","tiroJogador"),t.setAttribute("style","top:"+this.posicaoY+"px; left:"+(this.posicaoX+this.naveElement.offsetWidth/2)+"px;"),document.body.appendChild(t),this.disparoLiberado=!1,setTimeout((function(){e.disparoLiberado=!0}),this.delayDisparo)}},controlarDisparos:function(){for(var e=document.getElementsByClassName("tiroJogador"),t=0;t<e.length;t++){var r=e[t].offsetTop;r-=this.velocidadeDisparo,e[t].style.top=r+"px",this.controlaColisaoDisparo(e[t]),r<0&&e[t].remove()}},controlaColisaoDisparo:function(e){for(var t=document.getElementsByClassName("bomba"),r=l.vilao.vilaoElement,n=0;n<t.length;n++)e.offsetLeft>=t[n].offsetLeft&&e.offsetLeft<=t[n].offsetLeft+t[n].offsetWidth&&e.offsetTop<=t[n].offsetTop+t[n].offsetHeight?(e.remove(),l.bomba.criarExplosao(t[n]),t[n].remove(),this.incrementarPontuacao(),l.gerenciarGameMode()):e.offsetLeft>=r.offsetLeft&&e.offsetLeft<=r.offsetLeft+r.offsetWidth&&e.offsetTop<=r.offsetTop+r.offsetHeight&&l.vilao.inGame&&(e.remove(),l.vilao.perderVida(this.danoDisparo))},controlar:function(){this.posicaoY<0?this.posicaoY=0:this.posicaoY>n-this.naveElement.offsetWidth?this.posicaoY=window.innerHeight-this.naveElement.offsetWidth:this.posicaoY+=this.direcaoY*this.velocidade,this.posicaoX<0?this.posicaoX=0:this.posicaoX>o-this.naveElement.offsetWidth?this.posicaoX=window.innerWidth-this.naveElement.offsetWidth:this.posicaoX+=this.direcaoX*this.velocidade,this.atualizarPosicaoNave(),this.controlarDisparos()}};return d.atualizarPosicaoNave(),d.naveElement.style.display="",d.naveElement.style.backgroundImage="url("+d.imagem+")",d},i=function(){return Math.random()*(o-30*o/100)+15*o/100},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:5,d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:100;return{contador:e,velocidade:t,velocidadeDisparo:r,delayDisparo:a,danoDisparo:s,vida:d,vidaMaxima:d,inGame:!1,posicaoAlvo:i(),vilaoElement:document.getElementById("vilao"),vidaVilaoElement:document.getElementById("vidaVilao"),direcaoX:1,posicaoX:o/2-70,posicaoY:-140,criar:function(){this.vilaoElement.setAttribute("style","background-image: url(vilao".concat(this.contador+1,".gif); top: ").concat(this.posicaoY,"px; left: ").concat(this.posicaoX,"px; display: block")),this.inGame=!0,this.criarBarraVida(),this.desparosVilao=setInterval(this.disparar.bind(this),this.delayDisparo),l.jogador.criarBarraVida()},destruir:function(){this.inGame=!1,this.vidaVilaoElement.style.display="none",l.jogador.vidaJogadorElement.style.display="none",this.vilaoElement.style.display="none",clearInterval(this.desparosVilao),l.contadorGerenciarGameMode++,l.jogador.incrementarPontuacao(100)},criarBarraVida:function(){this.barraVilao=this.vidaVilaoElement.children[0].children[0],this.vidaVilaoElement.style.display="block",this.atualizarBarra()},perderVida:function(e){this.vida-=e,this.atualizarBarra(),this.vida<=0&&this.destruir()},atualizarBarra:function(){this.barraVilao.style.width=this.vida/this.vidaMaxima*100+"%"},disparar:function(){var e=document.createElement("div");e.setAttribute("class","tiroVilao"),console.log(this),console.log(this.vilaoElement),e.setAttribute("style","top:"+(this.posicaoY+this.vilaoElement.offsetHeight)+"px; left:"+(this.posicaoX+this.vilaoElement.offsetWidth/2)+"px;"),document.body.appendChild(e)},controlarDisparos:function(){for(var e=document.getElementsByClassName("tiroVilao"),t=0;t<e.length;t++){var r=e[t].offsetTop;r+=this.velocidadeDisparo,e[t].style.top=r+"px",this.controlaColisaoDisparoJogador(e[t]),r>n&&e[t].remove()}},controlaColisaoDisparoJogador:function(e){var t=l.jogador.naveElement;e.offsetLeft>=t.offsetLeft&&e.offsetLeft<=t.offsetLeft+t.offsetWidth&&e.offsetTop>=t.offsetTop&&(e.remove(),l.jogador.perderVida(this.danoDisparo))},controlar:function(){this.inGame&&(this.posicaoY<0&&(this.posicaoY+=.5,this.vilaoElement.style.top=this.posicaoY+"px"),(-1==this.direcaoX&&this.posicaoX<=this.posicaoAlvo||1==this.direcaoX&&this.posicaoX>=this.posicaoAlvo)&&(this.posicaoAlvo=i()),this.direcaoX=this.posicaoX<this.posicaoAlvo?1:-1,this.posicaoX+=this.velocidade*this.direcaoX,this.vilaoElement.style.left=this.posicaoX+"px"),this.controlarDisparos()}}};function d(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return c(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return c(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var l={contadorGerenciarGameMode:0,contadorVilao:0,gameStatus:!0,atributosViloes:[[],[void 0,3,1950,void 0,120],[3,3,1750,7,150],[5,5,1500,10,200]],inicializar:function(e,t){this.jogador=a.apply(void 0,[e].concat(d(t))),this.bomba=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2e3,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;return{dano:e,velocidade:t,velocidadeCriacao:r,quantidade:o,criar:function(){var e=i(),t=document.createElement("div");t.setAttribute("class","bomba"),t.setAttribute("style","top: 0px; left:"+e+"px"),document.body.appendChild(t)},criarExplosao:function(e){document.querySelectorAll(".explosao").length>=2&&document.querySelectorAll(".explosao")[0].remove();var t=document.createElement("div"),r=document.createElement("img"),n=new Audio("./somExplosao.mp3");n.currentTime=1,n.play(),r.setAttribute("src","./explosao.gif?"+new Date),r.width="50",t.setAttribute("class","explosao"),t.setAttribute("style","top:"+e.offsetTop+"px; left:"+e.offsetLeft+"px;"),t.appendChild(r),document.body.appendChild(t)},decrementarVelocidadeCriacao:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:200;this.velocidadeCriacao-=e},incrementarVelocidade:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.2;this.velocidade+=e},controlar:function(){for(var e=document.getElementsByClassName("bomba"),t=0;t<e.length;t++){var r=e[t].offsetTop;r+=this.velocidade,e[t].style.top=r+"px",r>n-e[t].offsetHeight&&(l.planeta.perderVida(this.dano),e[t]&&(this.criarExplosao(e[t]),e[t].remove()))}}}}(),this.planeta=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:100,t={vida:e,vidaMaxima:e,vidaPlanetaElement:document.getElementById("vidaPlaneta"),perderVida:function(e){this.vida-=e,this.atualizarBarra(),this.vida<=0&&l.gameOver()},atualizarBarra:function(){this.barraPlaneta.style.width=this.vida/this.vidaMaxima*100+"%"}};return t.barraPlaneta=t.vidaPlanetaElement.children[0].children[0],t.vidaPlanetaElement.style.display="block",t.atualizarBarra(),t}(),this.vilao=s(),this.intervalBomba=setInterval(this.bomba.criar,this.bomba.velocidadeCriacao),this.controlarGameLoop()},gerenciarGameMode:function(){this.jogador.pontuacao%5==0&&(this.contadorGerenciarGameMode<3?(this.bomba.incrementarVelocidade(),this.contadorGerenciarGameMode++):3==this.contadorGerenciarGameMode?this.vilao.inGame||(this.vilao=s.apply(void 0,[this.contadorVilao].concat(d(this.atributosViloes[this.contadorVilao]))),this.vilao.criar(),this.contadorVilao=this.contadorVilao<3?this.contadorVilao+1:0):(clearInterval(this.intervalBomba),this.bomba.decrementarVelocidadeCriacao(),this.intervalBomba=setInterval(this.bomba.criar,this.bomba.velocidadeCriacao),this.contadorGerenciarGameMode=0))},gameOver:function(){this.jogador.pontuacao>parseInt(localStorage.getItem("pontuacaoMaxima"))&&localStorage.setItem("pontuacaoMaxima",this.jogador.pontuacao),document.location.reload(!0)},controlarGameLoop:function(){this.gameStatus&&(this.jogador.controlar(),this.vilao.controlar(),this.bomba.controlar()),requestAnimationFrame(this.controlarGameLoop.bind(this))}},p={popupElement:document.getElementById("popup"),numNaves:7,atributosNave:[[],[6,6],[3,6,180],[void 0,7,void 0,6],[8,7,100,3],[7,8,160,8],[10,10,50,10,150]],criar:function(){this.show(),this.setValueLocalStorage();for(var e=document.getElementById("nave-container-items"),t=0;t<this.numNaves;t++){var r=document.createElement("div");r.setAttribute("class",t>2?"nave-item disable":"nave-item"),r.setAttribute("id",t),this._addClickEvent(r);var n=document.createElement("div"),o=this._createDivAtributesNaveGame(t),a=document.createElement("hr"),i=document.createElement("img");i.setAttribute("src","nave".concat(t+1,".gif")),n.appendChild(i),r.appendChild(n),r.appendChild(a),r.appendChild(o),e.appendChild(r)}},_createDivAtributesNaveGame:function(e){for(var t=["veloc.","disparo","delay","dano"],r=["purple","yellow","orange","red"],n=document.createElement("div"),o=0;o<t.length;o++){var a=document.createElement("div");a.setAttribute("class","atributosNave"),a.innerHTML=t[o];var i=this.atributosNave[e][o]||(2==o?200:5);i*=i>10?.5:10,a.setAttribute("style","width:"+i+"%; background-color:"+r[o]),n.appendChild(a)}return n},_addClickEvent:function(e){var t=this;e.addEventListener("click",(function(e){document.querySelectorAll(".nave-item").forEach((function(e){e.classList.remove("active")})),e.currentTarget.classList.add("active"),t.habilitarButtonStart(e.currentTarget.firstChild.firstChild,e.currentTarget.id)}))},setValueLocalStorage:function(){localStorage.getItem("pontuacaoMaxima")||localStorage.setItem("pontuacaoMaxima",0),document.getElementById("pontuacaoMaxima").children[0].innerHTML=localStorage.getItem("pontuacaoMaxima")},show:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.popupElement.style.display=e?"block":"none"},habilitarButtonStart:function(e,t){var r=this;document.querySelector("#popup-btn").classList.add("enable"),document.querySelector("#popup-btn").addEventListener("click",(function(){r.show(!1),l.inicializar(e.src,r.atributosNave[t])}))},rotacionarNavesDireita:function(){var e=document.getElementsByClassName("nave-item");if(Array.from(e[this.numNaves-1].classList).includes("disable"))for(var t=Array.from(e).map((function(e){return e.className})),r=0;r<this.numNaves;r++)e[r].className=0==r?t[this.numNaves-1]:t[r-1]},rotacionarNavesEsquerda:function(){var e=document.getElementsByClassName("nave-item");if(Array.from(e[0].classList).includes("disable"))for(var t=Array.from(e).map((function(e){return e.className})),r=0;r<this.numNaves;r++)r+1==this.numNaves?e[r].className=t[0]:e[r].className=t[r+1]}};window.addEventListener("keydown",(function(){var e=event.keyCode;38==e?l.jogador.direcaoY=-1:40==e&&(l.jogador.direcaoY=1),39==e?l.jogador.direcaoX=1:37==e&&(l.jogador.direcaoX=-1),32==e&&l.jogador.disparar()})),window.addEventListener("keyup",(function(){var e=event.keyCode;38!=e&&40!=e||(l.jogador.direcaoY=0),39!=e&&37!=e||(l.jogador.direcaoX=0)})),window.addEventListener("load",(function(){new Audio("musica.mp3").play()})),document.getElementById("btn-jogar").addEventListener("click",(function(){document.getElementById("container-jogar").style.display="none",p.criar()})),document.querySelector(".fa-arrow-right").addEventListener("click",p.rotacionarNavesDireita.bind(p)),document.querySelector(".fa-arrow-left").addEventListener("click",p.rotacionarNavesEsquerda.bind(p))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,